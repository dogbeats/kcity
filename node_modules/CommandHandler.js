const Command = require('Command');

class CommandHandler
{
	constructor()
	{
		this.commands = [];
	}
	
	registerCommand(name, alias, rank, commit)
	{
		this.commands.push(new Command(name, alias, rank, commit));
	}
	
	getCommandCount()
	{
		return this.commands.length;
	}
	
	isCommand(name)
	{
		for (var i = 0; i < this.commands.length; i++)
		{
			if (name == this.commands[i].getName())
			{
				return true;
			}
		}
		return false;
	}
	
	getCommandIndex(name)
	{
		for (var i = 0; i < this.commands.length; i++)
		{
			if (name == this.commands[i].getName())
			{
				return i;
			}
		}
		return -1;
	}
	
	getArgs(index)
	{
		return this.commands[index].getName();
	}
	
	getCommandRank(index)
	{
		return this.commands[index].getRequiredRank();
	}
	
	commit(index, args)
	{
		this.commands[index].commit(args);
	}
	

}

module.exports = CommandHandler;